{"version":3,"sources":["Components/Login.js","Components/Signup.js","Components/TabPanel.js","Components/LinkTab.js","Components/AttractionsList.js","Components/TicketList.js","Components/Create.js","Components/Home.js","Components/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","flexDirection","width","margin","textField","marginLeft","spacing","marginRight","button","Login","_useState","useState","username","password","_useState2","Object","slicedToArray","creds","setCreds","classes","handleChange","event","objectSpread","defineProperty","target","name","value","react_default","a","createElement","className","autoComplete","onSubmit","e","axios","post","concat","headers","Authorization","window","btoa","Content-Type","then","res","localStorage","setItem","data","access_token","location","href","catch","err","console","dir","preventDefault","TextField","id","label","variant","onChange","type","Button","color","Signup","TabPanel","props","children","index","other","objectWithoutProperties","Typography","assign","component","role","hidden","aria-labelledby","Box","p","LinkTab","Tab","onClick","root","flexGrow","card","height","AttractionsList","attractions","restaurants","switches","setSwitch","_useState3","_useState4","_useState5","_useState6","attractionData","setAttractionData","useEffect","get","response","checked","attractionList","map","ride","Card","key","attractionid","CardContent","attraction","CardActions","size","length","Switch","Grid","justify","TicketList","tickets","setTickets","log","ticketList","ticket","ticketid","CardHeader","title","subheader","time","avatar","Avatar","user","charAt","toUpperCase","gutterBottom","kidCount","CreateRequest","rides","setRides","setRestaurants","open","setOpen","_useState7","kids","_useState8","values","setValues","select","helperText","SelectProps","MenuProps","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Home","setValue","a11yProps","aria-controls","AppBar","position","Tabs","newValue","AppRouter","react_router_dom","react_router","exact","path","render","getItem","to","App","Components_AppRouter","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31b4566d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    width: '45%',\n    margin: '10% auto'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  button: {\n    width: '35%',\n    margin: '10px auto'\n  }\n}));\n\n\nexport default function Login() {\n  const [creds, setCreds] = useState({username: '', password: ''});\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setCreds({...creds, [event.target.name]: event.target.value });\n  }\n\n  const handleSubmit = e => {\n    axios.post('https://disneyparents.herokuapp.com/login',\n    `grant_type=password&username=${creds.username}&password=${creds.password}`,\n    {\n      headers: {\n        // btoa is converting our client id/client secret into base64\n        Authorization: `Basic ${window.btoa('lambda-client:lambda-secret')}`,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(res => {\n        localStorage.setItem('token', res.data.access_token);\n        creds.username = '';\n        creds.password = '';\n        window.location.href = '/home';\n    }).catch(err => console.dir(err));\n      e.preventDefault();\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form className={classes.container} autoComplete=\"off\" onSubmit={event => handleSubmit(event)}>\n        <TextField\n          className={classes.textField}\n          id=\"outlined-email-input\"\n          label=\"username\"\n          name=\"username\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={event => handleChange(event)}\n        />\n        <TextField\n          className={classes.textField}\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={event => handleChange(event)}\n        />\n        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button}>Log In</Button>\n        <Button href=\"/signup\" className={classes.button} color=\"primary\" variant=\"outlined\">Sign Up</Button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    width: '45%',\n    margin: '10% auto'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  button: {\n    width: '35%',\n    margin: '10px auto'\n  }\n}));\n\nexport default function Signup() {\n  const [creds, setCreds] = useState({username: '', password: ''});\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setCreds({...creds, [event.target.name]: event.target.value });\n  }\n\n  const handleSubmit = e => {\n    axios.post('https://disneyparents.herokuapp.com/createnewuser', creds).then(res => {\n      localStorage.setItem('token', window.btoa('lambda-client:lambda-secret'));\n      window.location.href = '/home';\n      creds.username = '';\n      creds.password = '';\n    }).catch(err => console.dir(err));\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form className={classes.container} autoComplete=\"off\" onSubmit={event => handleSubmit(event)}>\n        <TextField\n          className={classes.textField}\n          id=\"outlined-email-input\"\n          label=\"username\"\n          name=\"username\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={event => handleChange(event)}\n        />\n        <TextField\n          className={classes.textField}\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={event => handleChange(event)}\n        />\n        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button}>Create Profile</Button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n","import React from 'react';\nimport Tab from '@material-ui/core/Tab';\n\nexport default function LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={event => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  card: {\n    height: 100,\n    width: 300,\n    margin: '20px'\n  }\n});\n\nexport default function AttractionsList() {\n  const [switches, setSwitch] = useState({\n    attractions: true,\n    restaurants: false\n  });\n  const [restaurantData, setRestaurantData] = useState([]);\n  const [attractionData, setAttractionData] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    axios.get('https://disneyparents.herokuapp.com/attractions/attractions').then(response => {\n      setAttractionData(response.data);\n    });\n  }, [switches]);\n\n  const handleChange = name => event => {\n    setSwitch({...switches, [name]: event.target.checked });\n  };\n\n  const attractionList = attractionData.map((ride, index) => {\n    return (\n      <Card\n        className={classes.card}\n        key={ride.attractionid}>\n        <CardContent>\n          {ride.attraction}\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\">See More</Button>\n        </CardActions>\n      </Card>\n    );\n  });\n\n  if(!attractionData.length) return <h1>Loading...</h1>\n\n  return (\n    <Box>\n      Attractions: <Switch checked={switches.attractions} onChange={handleChange('attractions')} value='attractions'/>\n      Restraurants: <Switch checked={switches.restaurants} onChange={handleChange('restaurants')} value='restaurants' />\n      <Grid container className={classes.root} justify=\"center\" spacing={2}>\n        {attractionList}\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  card: {\n    width: 400,\n    margin: '20px'\n  }\n});\n\n\nexport default function TicketList() {\n  const [tickets, setTickets] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    axios.get('https://disneyparents.herokuapp.com/tickets/tickets').then(response => {\n      console.log(response.data);\n      setTickets(response.data);\n    }).catch(err => {\n      console.dir(err);\n    })\n  }, []);\n\n  const ticketList = tickets.map(ticket => {\n    return (\n      <Card\n        className={classes.card}\n        key={ticket.ticketid}>\n        <CardHeader\n          title={ticket.attractions.attraction}\n          subheader={ticket.time}\n          avatar={\n            <Avatar>{ticket.user.username.charAt(0).toUpperCase()}</Avatar>\n          }>\n\n        </CardHeader>\n        <CardContent>\n          <Typography gutterBottom>\n            Kids: {ticket.kidCount}\n          </Typography>\n        </CardContent>\n\n      </Card>\n    );\n  });\n\n\n  return (\n    <Box>\n      <Grid container className={classes.root} justify=\"center\" spacing={2}>\n        {ticketList}\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SnackBar from '@material-ui/core/SnackBar';\nimport SnackBarContent from '@material-ui/core/SnackBarContent';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '45%',\n    margin: '10% auto'\n  },\n  button: {\n    width: '35%',\n    margin: '15px auto'\n  }\n}));\n\nexport default function CreateRequest() {\n  const classes = useStyles();\n  const [rides, setRides] = useState([]);\n  const [restaurants, setRestaurants] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const [values, setValues] = useState({\n    location: '',\n    kids: 0,\n    time: ''\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    // axios.post('https://disneyparents.herokuapp.com/tickets/postticket', values).then(response => {\n    //   console.log(response);\n    // });\n    setValues({\n      location: '',\n      kids: 0,\n      time: ''\n    });\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    axios.get('https://disneyparents.herokuapp.com/attractions/attractions').then(response => {\n      setRides(response.data);\n      console.log(response.data);\n    });\n    axios.get('https://disneyparents.herokuapp.com/restaurants/restaurants').then(response => {\n      setRestaurants(response.data)\n    });\n  }, []);\n\n  return (\n\n    <form className={classes.container} onSubmit={event => onSubmit(event)}>\n      <TextField\n        select\n        label=\"Select Location\"\n        value={values.location}\n        helperText=\"Where do you want to meet?\"\n        onChange={handleChange('location')}\n        SelectProps={{\n          MenuProps: {\n            className: 'select-input',\n          },\n        }}>\n\n        {rides.map(ride => (\n          <MenuItem key={ride.attractionid} value={ride.attraction}>\n            {ride.attraction}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        select\n        label=\"Kids\"\n        value={values.kids}\n        helperText=\"How many kids do you have?\"\n        onChange={handleChange('kids')}>\n\n        <MenuItem value={1}>1</MenuItem>\n        <MenuItem value={2}>2</MenuItem>\n        <MenuItem value={3}>3</MenuItem>\n        <MenuItem value={4}>4+</MenuItem>\n\n      </TextField>\n\n      <Button\n        type='submit'\n        className={classes.button}\n        variant='outlined'>\n        Create New Request\n      </Button>\n      <SnackBar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n        open={open}\n        autoHideDuration={2000}\n        onClose={handleClose}>\n        <span>Request Created Successfully</span>\n      </SnackBar>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport TabPanel from './TabPanel';\nimport LinkTab from './LinkTab';\nimport AttractionsList from './AttractionsList';\nimport TicketList from './TicketList';\nimport CreateRequest from './Create';\n\nexport default function Home() {\n  const [value, setValue] = useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  function a11yProps(index) {\n    return {\n      id: `nav-tab-${index}`,\n      'aria-controls': `nav-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}>\n\n          <LinkTab label=\"Home\" href=\"/home\" {...a11yProps(0)} />\n          <LinkTab label=\"Open Requests\" href=\"/tickets\" {...a11yProps(1)} />\n          <LinkTab label=\"Main Attractions\" href=\"/attractions\" {...a11yProps(2)} />\n\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CreateRequest />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TicketList />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <AttractionsList />\n      </TabPanel>\n    </div>\n\n  )\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Login from './Login';\nimport Signup from './Signup';\nimport Home from './Home';\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Route\n        exact\n        path=\"/\"\n        render={() => {\n          if(localStorage.getItem('token')) {\n            return <Redirect to=\"/home\" />\n          } else {\n            return <Login />\n          }\n        }}  />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/home\" component={Home} />\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport AppRouter from './Components/AppRouter.js';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}